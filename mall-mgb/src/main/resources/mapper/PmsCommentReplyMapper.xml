<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.PmsCommentReplyMapper" >
  <resultMap id="BaseResultMap" type="model.PmsCommentReply" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="comment_id" property="comment_id" jdbcType="BIGINT" />
    <result column="member_nick_name" property="member_nick_name" jdbcType="VARCHAR" />
    <result column="member_icon" property="member_icon" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="create_time" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, comment_id, member_nick_name, member_icon, content, create_time, type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from pms_comment_reply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pms_comment_reply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="model.PmsCommentReply" >
    insert into pms_comment_reply (id, comment_id, member_nick_name, 
      member_icon, content, create_time, 
      type)
    values (#{id,jdbcType=BIGINT}, #{comment_id,jdbcType=BIGINT}, #{member_nick_name,jdbcType=VARCHAR}, 
      #{member_icon,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="model.PmsCommentReply" >
    insert into pms_comment_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="comment_id != null" >
        comment_id,
      </if>
      <if test="member_nick_name != null" >
        member_nick_name,
      </if>
      <if test="member_icon != null" >
        member_icon,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="create_time != null" >
        create_time,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="comment_id != null" >
        #{comment_id,jdbcType=BIGINT},
      </if>
      <if test="member_nick_name != null" >
        #{member_nick_name,jdbcType=VARCHAR},
      </if>
      <if test="member_icon != null" >
        #{member_icon,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.PmsCommentReply" >
    update pms_comment_reply
    <set >
      <if test="comment_id != null" >
        comment_id = #{comment_id,jdbcType=BIGINT},
      </if>
      <if test="member_nick_name != null" >
        member_nick_name = #{member_nick_name,jdbcType=VARCHAR},
      </if>
      <if test="member_icon != null" >
        member_icon = #{member_icon,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null" >
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.PmsCommentReply" >
    update pms_comment_reply
    set comment_id = #{comment_id,jdbcType=BIGINT},
      member_nick_name = #{member_nick_name,jdbcType=VARCHAR},
      member_icon = #{member_icon,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>